/**
 * GHL-Optimized Report Formatter
 * Creates clean, readable reports for GHL display
 */

export function formatReportForGHL(data: any): string {
  const lines: string[] = []
  
  // Header
  lines.push('🔍 WEBSITE ANALYSIS REPORT')
  lines.push('═══════════════════════════════════════')
  lines.push('')
  
  // Basic Info
  lines.push(`📌 Website: ${data.website || 'Not provided'}`)
  lines.push(`📌 Business: ${data.businessType || 'Unknown'}`)
  lines.push(`📌 Analysis Date: ${new Date().toLocaleDateString()}`)
  lines.push('')
  
  // Scores Section
  if (data.scores || data.leadScore) {
    lines.push('📊 SCORING BREAKDOWN')
    lines.push('───────────────────────────────────────')
    if (data.scores?.overall) {
      lines.push(`Website Score: ${data.scores.overall}/100`)
    }
    if (data.leadScore) {
      lines.push(`Lead Quality Score: ${data.leadScore}/100`)
    }
    if (data.leadTemperature) {
      lines.push(`Lead Temperature: ${data.leadTemperature.toUpperCase()}`)
    }
    lines.push('')
  }
  
  // Platform & Booking
  if (data.analysisResults) {
    lines.push('🔧 TECHNICAL DETAILS')
    lines.push('───────────────────────────────────────')
    lines.push(`Platform: ${data.analysisResults.platform || 'Unknown'}`)
    lines.push(`Booking System: ${data.analysisResults.bookingSystem || 'None detected'}`)
    lines.push('')
  }
  
  // Critical Issues
  if (data.analysisResults?.issues && data.analysisResults.issues.length > 0) {
    lines.push(`⚠️ CRITICAL ISSUES (${data.analysisResults.issues.length} found)`)
    lines.push('───────────────────────────────────────')
    data.analysisResults.issues.forEach((issue: string, index: number) => {
      lines.push(`${index + 1}. ${issue}`)
    })
    lines.push('')
  }
  
  // Quick Wins
  if (data.analysisResults?.quickWins && data.analysisResults.quickWins.length > 0) {
    lines.push('✅ QUICK WINS (Easy Fixes)')
    lines.push('───────────────────────────────────────')
    data.analysisResults.quickWins.forEach((win: string, index: number) => {
      lines.push(`${index + 1}. ${win}`)
    })
    lines.push('')
  }
  
  // Competitor Insights
  if (data.analysisResults?.competitorInsights) {
    lines.push('🎯 COMPETITIVE INTELLIGENCE')
    lines.push('───────────────────────────────────────')
    lines.push(data.analysisResults.competitorInsights)
    lines.push('')
  }
  
  // Financial Impact
  if (data.roi || data.currentAdSpend) {
    lines.push('💰 FINANCIAL IMPACT')
    lines.push('───────────────────────────────────────')
    if (data.currentAdSpend) {
      lines.push(`Current Ad Spend: ${data.currentAdSpend}`)
    }
    if (data.roi?.currentConversion) {
      lines.push(`Current Conversion Rate: ${data.roi.currentConversion}`)
    }
    if (data.roi?.potentialConversion) {
      lines.push(`Potential After Fixes: ${data.roi.potentialConversion}`)
    }
    if (data.roi?.additionalRevenue) {
      lines.push(`Additional Revenue Potential: ${data.roi.additionalRevenue}`)
    }
    lines.push('')
  }
  
  // Pain Points
  if (data.painPoints && data.painPoints.length > 0) {
    lines.push('🎯 KEY PAIN POINTS')
    lines.push('───────────────────────────────────────')
    data.painPoints.forEach((pain: string) => {
      lines.push(`• ${pain}`)
    })
    lines.push('')
  }
  
  // Next Steps
  lines.push('📋 RECOMMENDED NEXT STEPS')
  lines.push('───────────────────────────────────────')
  lines.push('1. Address critical issues immediately')
  lines.push('2. Implement quick wins this week')
  lines.push('3. Schedule follow-up to track improvements')
  lines.push('4. Consider professional optimization services')
  lines.push('')
  
  // Footer
  lines.push('═══════════════════════════════════════')
  lines.push('Generated by LeadBalloon AI Analysis')
  lines.push(`Report ID: ${Date.now()}`)
  
  // Join with double line breaks for better GHL display
  return lines.join('\n')
}

/**
 * Format for SMS/Email (shorter version)
 */
export function formatReportSummary(data: any): string {
  const lines: string[] = []
  
  lines.push(`Website Analysis Complete for ${data.website}`)
  lines.push('')
  lines.push(`Score: ${data.scores?.overall || data.leadScore}/100`)
  lines.push(`Issues Found: ${data.analysisResults?.issues?.length || 0}`)
  lines.push(`Platform: ${data.analysisResults?.platform || 'Unknown'}`)
  lines.push(`Booking: ${data.analysisResults?.bookingSystem || 'None'}`)
  lines.push('')
  
  if (data.analysisResults?.issues && data.analysisResults.issues.length > 0) {
    lines.push('Top Issues:')
    data.analysisResults.issues.slice(0, 3).forEach((issue: string) => {
      lines.push(`- ${issue}`)
    })
  }
  
  return lines.join('\n')
}